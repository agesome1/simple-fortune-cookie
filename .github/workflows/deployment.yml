env:
  docker_username: ${{ secrets.DOCKER_USERNAME }}
  docker_password: ${{ secrets.DOCKER_PASSWORD }}
  commit_sha: ${{ GITHUB_SHA }}

name: Go CD
on: 
  push:
    branches:
      - main
jobs:
  Build-and-Test:
    runs-on: ubuntu-latest
    container: golang:1.16.7
    steps:
      - name: setup
        uses: actions/checkout@v2
      - name: builder backend
        run: cd backend/ && go build .
      - name: builder frontend
        run: cd frontend/ && go build .
      - name: test backend
        run: cd backend/ && go test
      - name: test frontend
        run: cd frontend/ && go test
  Backend:
    needs: Build-and-Test
    runs-on: ubuntu-latest
    steps:
      - name: setup
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.docker_username }}
          password: ${{ env.docker_password }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: agesome2/backend:latest,agesome2/backend:${{ env.commit_sha }}
          target: backend
  Frontend:
    needs: Build-and-Test
    runs-on: ubuntu-latest
    steps:
      - name: setup
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.docker_username }}
          password: ${{ env.docker_password }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: agesome2/frontend:latest,agesome2/frontend:${{ env.commit_sha }}
          target: frontend
  Deploy:
    runs-on: self-hosted
    needs: [Frontend, Backend]
    steps:
      - run: kubectl apply -f k_yaml/
  Deploy2:
    runs-on: ubuntu-latest
    needs: [Frontend, Backend]
    steps:
      - uses: actions/checkout@master
      - name: deploy to cluster
        uses: steebchen/kubectl@v2.0.0
        with: # defaults to latest kubectl binary version
          config: ${{ secrets.KUBE_CONFIG_DATA }}
          command: apply -f k_yaml/
